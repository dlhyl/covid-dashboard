{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["numberFormatter","item","numeral","format","dateFormatter","moment","xAxisFormatter","isValid","StyledCard","styled","Card","renderColorfulLegendText","value","entry","color","payload","style","fontWeight","strokeWidth","App","useState","items","setItems","comparisonData","setComparisonData","useEffect","fetch","method","headers","then","res","json","sum","forEach","obj","Object","keys","filter","propertyName","some","v","includes","key","hasOwnProperty","className","width","height","marginTop","marginBottom","gutter","title","bordered","ResponsiveContainer","LineChart","data","CartesianGrid","stroke","strokeDasharray","vertical","XAxis","dataKey","tick","fill","tickMargin","axisLine","tickLine","tickFormatter","YAxis","Tooltip","labelStyle","fontSize","labelFormatter","formatter","Legend","verticalAlign","align","wrapperStyle","position","Line","isAnimationActive","type","name","dot","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04826729.chunk.js","sourcesContent":["import \"./css/main.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport { ResponsiveContainer, LineChart, Legend, Line, CartesianGrid, XAxis, YAxis, Tooltip } from \"recharts\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\nconst numberFormatter = (item) => numeral(item).format(\"0\");\r\nconst dateFormatter = (item) => moment(item).format(\"DD MMM\");\r\nconst colors = [\"#7DB3FF\", \"#49457B\", \"#FF7C78\"];\r\nconst xAxisFormatter = (item) => {\r\n  if (moment(item).isValid()) {\r\n    return dateFormatter(item);\r\n  } else {\r\n    return item;\r\n  }\r\n};\r\n\r\nconst StyledCard = styled(Card)`\r\n  box-shadow: 0px 2px 4px rgba(141, 149, 166, 0.1);\r\n  border-radius: 10px;\r\n  background: rgb(255 255 255 / 18%);\r\n  padding: 10px 0px;\r\n  .ant-card-head-title {\r\n    color: #fff;\r\n    font-weight: 600;\r\n    font-size: calc(9px + 1.5vmin);\r\n  }\r\n  .ant-card-head {\r\n    border: none;\r\n  }\r\n  .ant-card-body {\r\n    padding-top: 12px;\r\n  }\r\n`;\r\n\r\nfunction getValue(obj, attr) {\r\n  if (obj == null) return null;\r\n  return obj[attr];\r\n}\r\n\r\nconst formatXAxis = (tickItem) => {\r\n  console.log(tickItem);\r\n  // return tickItem;\r\n  return new Date(tickItem).toISOString().split(\"T\")[0];\r\n};\r\n\r\nconst renderColorfulLegendText = (value, entry) => {\r\n  const { color, payload } = entry;\r\n  return <span style={{ color, fontWeight: payload.strokeWidth * 150 }}>{value}</span>;\r\n};\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState({});\r\n  const [comparisonData, setComparisonData] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(`https://covid.lubomirdlhy.tech/api/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        setItems(res);\r\n      });\r\n\r\n    fetch(`https://covid.lubomirdlhy.tech/api/comparison?interval_past=\"2 weeks\"&interval_future=\"4 weeks\"`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        const sum = {};\r\n        res.forEach((obj) => {\r\n          const keys = Object.keys(obj).filter(function (propertyName) {\r\n            return [\"deaths_today\", \"vaccinated1stdose_today\", \"vaccinated2nddose_today\"].some((v) => propertyName.includes(v));\r\n          });\r\n          keys.forEach((key) => {\r\n            if (sum.hasOwnProperty(key)) sum[key] += obj[key];\r\n            else sum[key] = obj[key];\r\n            obj[key + \"_sum\"] = sum[key];\r\n          });\r\n        });\r\n\r\n        setComparisonData(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Container>{rows}</Container> */}\r\n\r\n      {items && (\r\n        <div style={{ width: \"100%\", height: \"100%\", marginTop: \"1rem\", marginBottom: \"1rem\" }} className=\"container\">\r\n          <Row gutter={[16, 16]}>\r\n            <Col>\r\n              <StyledCard title={\"Positive Daily\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={items}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} tickFormatter={xAxisFormatter} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} labelFormatter={dateFormatter} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} formatter={renderColorfulLegendText} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"pcr_ag_positive\" name=\"PCR + Ag\" stroke=\"#9d4edd\" strokeWidth={5} />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"pcr_positive_today\"\r\n                      name=\"PCR\"\r\n                      stroke=\"#90e0ef\"\r\n                      strokeWidth={1}\r\n                      strokeDasharray=\"5 3\"\r\n                    />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"ag_positive_today\"\r\n                      name=\"Ag\"\r\n                      stroke=\"#e5383b\"\r\n                      strokeWidth={1}\r\n                      strokeDasharray=\"5 3\"\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col>\r\n            <Col>\r\n              <StyledCard title={\"Tests Daily\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={items}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} tickFormatter={xAxisFormatter} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} labelFormatter={dateFormatter} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} formatter={renderColorfulLegendText} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"pcr_ag_tests\" name=\"PCR+Ag\" stroke=\"#9d4edd\" strokeWidth={5} />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"pcr_tests_today\"\r\n                      name=\"PCR\"\r\n                      stroke=\"#90e0ef\"\r\n                      strokeWidth={1}\r\n                      strokeDasharray=\"5 3\"\r\n                    />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"ag_tests_today\" name=\"Ag\" stroke=\"#e5383b\" strokeWidth={1} strokeDasharray=\"5 3\" />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col>\r\n            {/* <Col span={11}>\r\n              <StyledCard title={\"Vaccination\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={items} margin={{}}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} tickFormatter={xAxisFormatter} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} labelFormatter={dateFormatter} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"vaccinated1stdose_today\" name=\"1st dose\" stroke=\"#fec89a\" strokeWidth={4} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"vaccinated2nddose_today\" name=\"2nd dose\" stroke=\"#feadfb\" strokeWidth={4} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col> */}\r\n          </Row>\r\n          <Row gutter={[16, 16]}>\r\n            <Col>\r\n              <StyledCard title={\"PCR+Ag 2020 - 2021 Comparison\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={comparisonData}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"y2021_pcr_ag_positive_avg_7d\"\r\n                      name=\"2021 7d AVG\"\r\n                      stroke=\"#fec89a\"\r\n                      strokeWidth={4}\r\n                    />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2021_pcr_ag_positive\" name=\"2021\" stroke=\"#fec89a\" strokeWidth={1} />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"y2020_pcr_ag_positive_avg_7d\"\r\n                      name=\"2020 7d AVG\"\r\n                      stroke=\"#feadfb\"\r\n                      strokeWidth={4}\r\n                    />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2020_pcr_ag_positive\" name=\"2020\" stroke=\"#feadfb\" strokeWidth={1} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col>\r\n            <Col>\r\n              <StyledCard title={\"Hospitalizations 2020 - 2021 Comparison\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={comparisonData}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2021_hosp\" name=\"2021 sus + conf\" stroke=\"#9381ff\" strokeWidth={4} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2021_hosp_conf\" name=\"2021 conf\" stroke=\"#b8b8ff\" strokeWidth={1} dot={false} />\r\n\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2020_hosp\" name=\"2020 sus + conf\" stroke=\"#8b5e34\" strokeWidth={4} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2020_hosp_conf\" name=\"2020 conf\" stroke=\"#bc8a5f\" strokeWidth={1} dot={false} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={[16, 16]}>\r\n            <Col>\r\n              <StyledCard title={\"Deaths 2020 - 2021 Comparison\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={comparisonData}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2021_deaths_today_sum\" name=\"2021\" stroke=\"#fec89a\" strokeWidth={5} dot={false} />\r\n                    <Line isAnimationActive={false} type=\"monotone\" dataKey=\"y2020_deaths_today_sum\" name=\"2020\" stroke=\"#feadfb\" strokeWidth={5} dot={false} />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col>\r\n            <Col>\r\n              <StyledCard title={\"Vaccinations 2020 - 2021 Comparison\"} bordered={false} className=\"widget-card\">\r\n                <ResponsiveContainer height={350} width=\"100%\">\r\n                  <LineChart data={comparisonData} margin={{}}>\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" vertical={false} />\r\n                    <XAxis dataKey=\"date\" tick={{ fill: \"#fff\" }} tickMargin={10} axisLine={false} tickLine={false} />\r\n                    <YAxis tick={{ fill: \"#fff\" }} tickMargin={5} axisLine={false} tickLine={false} tickFormatter={numberFormatter} />\r\n                    <Tooltip labelStyle={{ fontSize: 16, color: \"#8884d8\", fontWeight: \"bold\" }} formatter={numberFormatter} />\r\n                    <Legend verticalAlign=\"bottom\" align=\"center\" wrapperStyle={{ position: \"relative\" }} />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"y2021_vaccinated1stdose_today_sum\"\r\n                      name=\"2021 1st dose\"\r\n                      stroke=\"#9381ff\"\r\n                      strokeWidth={5}\r\n                      dot={false}\r\n                    />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"y2020_vaccinated1stdose_today_sum\"\r\n                      name=\"2020 1st dose\"\r\n                      stroke=\"#8b5e34\"\r\n                      strokeWidth={5}\r\n                      dot={false}\r\n                    />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"y2021_vaccinated2nddose_today_sum\"\r\n                      name=\"2021 2nd dose\"\r\n                      stroke=\"#fec89a\"\r\n                      strokeWidth={5}\r\n                      dot={false}\r\n                    />\r\n                    <Line\r\n                      isAnimationActive={false}\r\n                      type=\"monotone\"\r\n                      dataKey=\"y2020_vaccinated2nddose_today_sum\"\r\n                      name=\"2020 2nd dose\"\r\n                      stroke=\"#feadfb\"\r\n                      strokeWidth={5}\r\n                      dot={false}\r\n                    />\r\n                  </LineChart>\r\n                </ResponsiveContainer>\r\n              </StyledCard>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}