{"version":3,"sources":["components/Widget.js","App.js","reportWebVitals.js","index.js"],"names":["Widget","props","Col","md","size","className","hasOwnProperty","valueThisWeek","valueLastWeek","desc","lineChartData","colors","data","height","min","legend","library","labels","fontColor","scales","yAxes","ticks","scaleLabel","xAxes","layout","padding","left","right","top","bottom","getValue","obj","attr","App","useState","items","setItems","graphs","setGraphs","useEffect","fetch","method","headers","then","res","json","pcrAgAvg","thisW","PCR_AG_AVERAGE","lastW","info","graph","hosp","HOSPITALIZED","incidence","incidence14d","pcr","ag","deaths","DEATHS_AVERAGE","vacc1","vacc2","rawData","dates","PcrAgP","pcrP","map","item","index","agP","PcrP","AgP","name","dataset","borderWidth","rows","Object","keys","length","columns","forEach","push","Row","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00fa1513.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../css/main.css\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { LineChart } from \"react-chartkick\";\r\n\r\nfunction Widget(props) {\r\n  return (\r\n    <Col md={props.size} className=\"widget my-sm-5\">\r\n      <div className=\"textContainer\">\r\n        <div className=\"widget-number\">\r\n          {props.hasOwnProperty(\"valueThisWeek\") && props.valueThisWeek !== null ? props.valueThisWeek : \"NA\"} (\r\n          {props.hasOwnProperty(\"valueLastWeek\") && props.valueLastWeek !== null ? props.valueLastWeek : \"NA\"})\r\n        </div>\r\n        <p className=\"widget-info\">{props.hasOwnProperty(\"desc\") && props.desc !== null ? props.desc : \"\"}</p>\r\n      </div>\r\n      {props.hasOwnProperty(\"lineChartData\") && props.lineChartData !== null && (\r\n        <div className=\"graphContainer\">\r\n          <LineChart\r\n            colors={[\"#fec89a\", \"#f8edeb\", \"#e8a598\"]}\r\n            data={props.lineChartData}\r\n            height={180}\r\n            min={null}\r\n            legend={false}\r\n            library={{\r\n              labels: {\r\n                fontColor: \"white\",\r\n              },\r\n              scales: {\r\n                yAxes: [\r\n                  {\r\n                    ticks: { fontColor: \"#ccc\" },\r\n                    scaleLabel: { fontColor: \"#ccc\" },\r\n                  },\r\n                ],\r\n                xAxes: [\r\n                  {\r\n                    ticks: { fontColor: \"#ccc\" },\r\n                  },\r\n                ],\r\n              },\r\n              layout: {\r\n                padding: {\r\n                  left: 0,\r\n                  right: 8,\r\n                  top: 0,\r\n                  bottom: 0,\r\n                },\r\n              },\r\n            }}\r\n          ></LineChart>\r\n        </div>\r\n      )}\r\n    </Col>\r\n  );\r\n}\r\nexport default Widget;\r\n","import \"./css/main.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\nimport Widget from \"./components/Widget\";\r\nimport \"chart.js\";\r\n\r\nfunction getValue(obj, attr) {\r\n  if (obj == null) return null;\r\n  return obj[attr];\r\n}\r\n\r\nfunction App() {\r\n  const [items, setItems] = useState({});\r\n  const [graphs, setGraphs] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://35.205.10.161/api/covid/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        const data = {\r\n          pcrAgAvg: { thisW: res[0].PCR_AG_AVERAGE, lastW: getValue(res[1], \"PCR_AG_AVERAGE\"), info: \"pcr+ag 7d priemer\", graph: \"PcrAgP\", size: 3 },\r\n          hosp: { thisW: res[0].HOSPITALIZED, lastW: getValue(res[1], \"HOSPITALIZED\"), info: \"hospitalizacie\", graph: \"hosp\", size: 3 },\r\n          incidence: {\r\n            thisW: res[0].incidence14d.pcr + \"/\" + res[0].incidence14d.ag,\r\n            lastW: getValue(getValue(res[1], \"incidence14d\"), \"pcr\") + \"/\" + getValue(getValue(res[1], \"incidence14d\"), \"ag\"),\r\n            info: \"pcr/ag 14d incidencia\",\r\n            size: 3,\r\n          },\r\n          deaths: { thisW: res[0].DEATHS_AVERAGE, lastW: getValue(res[1], \"DEATHS_AVERAGE\"), info: \"umrtia 7d priemer\", graph: \"deaths\", size: 3 },\r\n          vacc1: {\r\n            thisW: getValue(getValue(getValue(res[0], \"VACC\"), 1), \"SUM\") + \" / \" + getValue(getValue(getValue(res[0], \"VACC\"), 1), \"AVG\"),\r\n            lastW: getValue(getValue(getValue(res[1], \"VACC\"), 1), \"SUM\") + \" / \" + getValue(getValue(getValue(res[1], \"VACC\"), 1), \"AVG\"),\r\n            info: \"suma/priemer 7d vakcinacia 1. davka\",\r\n            size: 5,\r\n            graph: \"vacc1\",\r\n          },\r\n          vacc2: {\r\n            thisW: getValue(getValue(getValue(res[0], \"VACC\"), 2), \"SUM\") + \" / \" + getValue(getValue(getValue(res[0], \"VACC\"), 2), \"AVG\"),\r\n            lastW: getValue(getValue(getValue(res[1], \"VACC\"), 2), \"SUM\") + \" / \" + getValue(getValue(getValue(res[1], \"VACC\"), 2), \"AVG\"),\r\n            info: \"suma/priemer 7d vakcinacia 2. davka\",\r\n            size: 5,\r\n            graph: \"vacc2\",\r\n          },\r\n          rawData: res[0].rawData,\r\n          dates: res[0].dates,\r\n        };\r\n\r\n        const PcrAgP = res[0].rawData.pcrP.map((item, index) => [res[0].dates[index], item + res[0].rawData.agP[index]]);\r\n        const PcrP = res[0].rawData.pcrP.map((item, index) => [res[0].dates[index], item]);\r\n        const AgP = res[0].rawData.agP.map((item, index) => [res[0].dates[index], item]);\r\n        const hosp = res[0].rawData.hosp.map((item, index) => [res[0].dates[index], item]);\r\n        const deaths = res[0].rawData.deaths.map((item, index) => [res[0].dates[index], item]);\r\n        const vacc1 = res[0].rawData.vacc1.map((item, index) => [res[0].dates[index], item]);\r\n        const vacc2 = res[0].rawData.vacc2.map((item, index) => [res[0].dates[index], item]);\r\n\r\n        setItems(data);\r\n        setGraphs({\r\n          PcrAgP: [\r\n            { name: \"PCR+Ag\", data: PcrAgP, dataset: { borderWidth: 5 } },\r\n            { name: \"PCR\", data: PcrP },\r\n            { name: \"Ag\", data: AgP },\r\n          ],\r\n          hosp: hosp,\r\n          deaths: deaths,\r\n          vacc1,\r\n          vacc2,\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const rows = [];\r\n\r\n  if (Object.keys(items).length) {\r\n    let columns = [];\r\n    [items.pcrAgAvg, items.hosp, items.deaths, items.vacc1, items.vacc2].forEach((item, index) => {\r\n      if (index && index % 3 === 0) {\r\n        rows.push(<Row className=\"justify-content-between\">{columns}</Row>);\r\n        columns = [];\r\n      }\r\n      columns.push(\r\n        <Widget\r\n          key={index}\r\n          valueThisWeek={item.thisW}\r\n          valueLastWeek={item.lastW}\r\n          desc={item.info}\r\n          size={item.size}\r\n          lineChartData={item.hasOwnProperty(\"graph\") ? graphs[item.graph] : null}\r\n        ></Widget>\r\n      );\r\n    });\r\n    if (columns.length) {\r\n      rows.push(<Row className=\"justify-content-between\">{columns}</Row>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Container>{rows}</Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}